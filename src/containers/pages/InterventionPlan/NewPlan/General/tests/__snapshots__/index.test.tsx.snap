// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`containers/pages/NewPlan render correctly for New IRS plan 1`] = `
Object {
  "allFormActivities": Array [
    Object {
      "actionCode": "Case Confirmation",
      "actionDescription": "Confirm the index case",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Case Confirmation",
      "goalDescription": "Confirm the index case",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 1,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "RACD Register Family",
      "actionDescription": "Register all families & family members in all residential structures enumerated (100%) within the operational area",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "Family Registration",
      "condition": Array [
        Object {
          "description": "Structure is residential or type does not exist",
          "expression": "$this.type.where(id='locationType').exists().not() or $this.type.where(id='locationType').text = 'Residential Structure'",
        },
        Object {
          "description": "Family does not exist for structure",
          "expression": "$this.contained.exists().not()",
        },
        Object {
          "description": "Apply to residential structures in Register_Structure questionnaires",
          "expression": "questionnaire = 'Register_Structure' and $this.item.where(linkId='structureType').answer.value ='Residential Structure'",
        },
      ],
      "goalDescription": "Register all families & family members in all residential structures enumerated (100%) within the operational area",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "name": "plan-activation",
        },
        Object {
          "description": "",
          "expression": "questionnaire = 'Register_Structure'",
          "name": "event-submission",
        },
      ],
    },
    Object {
      "actionCode": "RACD Register Family",
      "actionDescription": "Register all families & family members in all residential structures enumerated (100%) within the operational area",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Family Registration",
      "goalDescription": "Register all families & family members in all residential structures enumerated (100%) within the operational area",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "Blood Screening",
      "actionDescription": "Visit all residential structures (100%) within a 1 km radius of a confirmed index case and test each registered person",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Blood Screening",
      "goalDescription": "Visit all residential structures (100%) within a 1 km radius of a confirmed index case and test each registered person",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "Blood Screening",
      "actionDescription": "Visit all residential structures (100%) within a 1 km radius of a confirmed index case and test each registered person",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Blood Screening",
      "condition": Array [
        Object {
          "description": "Person is older than 5 years or person associated with questionnaire response if older than 5 years",
          "expression": "($this.is(FHIR.Patient) and $this.birthDate <= today() - 5 'years') or ($this.contained.where(Patient.birthDate <= today() - 5 'years').exists())",
        },
      ],
      "goalDescription": "Visit all residential structures (100%) within a 1 km radius of a confirmed index case and test each registered person",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "name": "plan-activation",
        },
        Object {
          "description": "",
          "expression": "questionnaire = 'Family Registration' or questionnaire = 'Family Member Registration'",
          "name": "event-submission",
        },
      ],
    },
    Object {
      "actionCode": "Bednet Distribution",
      "actionDescription": "Visit 100% of residential structures in the operational area and provide nets",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Bednet Distribution",
      "goalDescription": "Visit 100% of residential structures in the operational area and provide nets",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "Bednet Distribution",
      "actionDescription": "Visit 100% of residential structures in the operational area and provide nets",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "Bednet Distribution",
      "condition": Array [
        Object {
          "description": "Structure is residential or type does not exist",
          "expression": "$this.type.where(id='locationType').exists().not() or $this.type.where(id='locationType').text = 'Residential Structure'",
        },
        Object {
          "description": "Family exists for structure",
          "expression": "$this.contained.exists()",
        },
        Object {
          "description": "Register structure Event submitted for a residential structure",
          "expression": "questionnaire = 'Register_Structure' and $this.item.where(linkId='structureType').answer.value ='Residential Structure'",
        },
      ],
      "goalDescription": "Visit 100% of residential structures in the operational area and provide nets",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "name": "plan-activation",
        },
        Object {
          "description": "",
          "expression": "questionnaire = 'Family Registration'",
          "name": "event-submission",
        },
      ],
    },
    Object {
      "actionCode": "Larval Dipping",
      "actionDescription": "Perform a minimum of three larval dipping activities in the operational area",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Larval Dipping",
      "condition": Array [
        Object {
          "description": "Structure is a larval breeding site",
          "expression": "$this.type.where(id='locationType').text = 'Larval Breeding Site'",
        },
        Object {
          "description": "Apply to larval breeding sites in Register_Structure questionnaires",
          "expression": "questionnaire = 'Register_Structure' and $this.item.where(linkId='structureType').answer.value ='Larval Breeding Site'",
        },
      ],
      "goalDescription": "Perform a minimum of three larval dipping activities in the operational area",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 3,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "name": "plan-activation",
        },
        Object {
          "description": "",
          "expression": "questionnaire = 'Register_Structure'",
          "name": "event-submission",
        },
      ],
    },
    Object {
      "actionCode": "Larval Dipping",
      "actionDescription": "Perform a minimum of three larval dipping activities in the operational area",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Larval Dipping",
      "goalDescription": "Perform a minimum of three larval dipping activities in the operational area",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 3,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "Mosquito Collection",
      "actionDescription": "Set a minimum of three mosquito collection traps and complete the mosquito collection process",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Mosquito Collection",
      "condition": Array [
        Object {
          "description": "Structure is a mosquito collection point",
          "expression": "$this.type.where(id='locationType').text = 'Mosquito Collection Point'",
        },
        Object {
          "description": "Apply to mosquito collection point in Register_Structure questionnaires",
          "expression": "questionnaire = 'Register_Structure' and $this.item.where(linkId='structureType').answer.value ='Mosquito Collection Point'",
        },
      ],
      "goalDescription": "Set a minimum of three mosquito collection traps and complete the mosquito collection process",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 3,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "name": "plan-activation",
        },
        Object {
          "description": "",
          "expression": "questionnaire = 'Register_Structure'",
          "name": "event-submission",
        },
      ],
    },
    Object {
      "actionCode": "Mosquito Collection",
      "actionDescription": "Set a minimum of three mosquito collection traps and complete the mosquito collection process",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Mosquito Collection",
      "goalDescription": "Set a minimum of three mosquito collection traps and complete the mosquito collection process",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 3,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "IRS",
      "actionDescription": "Visit each structure in the operational area and attempt to spray",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "Spray Structures",
      "goalDescription": "Spray structures in the operational area",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 90,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "IRS",
      "actionDescription": "Visit each structure in the operational area and attempt to spray",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "Spray Structures",
      "condition": Array [
        Object {
          "description": "Structure is residential or type does not exist",
          "expression": "$this.type.where(id='locationType').exists().not() or $this.type.where(id='locationType').text = 'Residential Structure'",
        },
        Object {
          "description": "Apply to residential structures in Register_Structure questionnaires",
          "expression": "questionnaire = 'Register_Structure' and $this.item.where(linkId='structureType').answer.value ='Residential Structure'",
        },
      ],
      "goalDescription": "Spray structures in the operational area",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 90,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "name": "plan-activation",
        },
        Object {
          "description": "",
          "expression": "questionnaire = 'Register_Structure'",
          "name": "event-submission",
        },
      ],
    },
    Object {
      "actionCode": "MDA Dispense",
      "actionDescription": "Dispense medication to each eligible person",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "MDA Dispense",
      "goalDescription": "Dispense medication to each eligible person",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "MDA Adverse Event(s)",
      "actionDescription": "Report any adverse events from medication",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "MDA Adverse Event(s)",
      "goalDescription": "Report any adverse events from medication",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 2,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "MDA Dispense",
      "actionDescription": "Visit all residential structures (100%) and dispense prophylaxis to each registered person",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "MDA Dispense",
      "condition": Array [
        Object {
          "description": "Person is older than 5 years or person associated with questionaire response if older than 5 years",
          "expression": "($this.is(FHIR.Patient) and $this.birthDate <= today() - 5 'years') or ($this.contained.where(Patient.birthDate <= today() - 5 'years').exists())",
        },
      ],
      "goalDescription": "Visit all residential structures (100%) dispense prophylaxis to each registered person",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "name": "plan-activation",
        },
        Object {
          "description": "",
          "expression": "questionnaire = 'Family Registration' or questionnaire = 'Family Member Registration'",
          "name": "event-submission",
        },
      ],
    },
    Object {
      "actionCode": "MDA Adherence",
      "actionDescription": "Visit all residential structures (100%) and confirm adherence of each registered person",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "MDA Adherence",
      "condition": Array [
        Object {
          "description": "The person fully received the dispense activity",
          "expression": "$this.item.where(linkId='business_status').answer.value = 'Fully Received'",
        },
      ],
      "goalDescription": "Visit all residential structures (100%) and confirm adherence of each registered person",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "description": "",
          "expression": "questionnaire = 'mda_dispense'",
          "name": "event-submission",
        },
      ],
    },
    Object {
      "actionCode": "BCC",
      "actionDescription": "Conduct BCC activity",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Behaviour Change Communication",
      "goalDescription": "Complete at least 1 BCC activity for the operational area",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 1,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "BCC",
      "actionDescription": "Conduct BCC activity",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "Behaviour Change Communication",
      "condition": Array [
        Object {
          "description": "Jurisdiction type location",
          "expression": "Location.physicalType.text = 'jdn'",
        },
      ],
      "goalDescription": "Complete at least 1 BCC activity for the operational area",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 1,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "name": "plan-activation",
        },
      ],
    },
  ],
  "allowMoreJurisdictions": false,
  "cascadingSelect": false,
  "disabledActivityFields": Array [],
  "disabledFields": Array [
    "interventionType",
    "status",
  ],
  "formHandler": Any<Function>,
  "initialValues": Object {
    "activities": Array [
      Object {
        "actionCode": "IRS",
        "actionDescription": "Visit each structure in the operational area and attempt to spray",
        "actionIdentifier": "",
        "actionReason": "Routine",
        "actionTitle": "Spray Structures",
        "goalDescription": "Spray structures in the operational area",
        "goalDue": 2017-07-20T19:31:00.000Z,
        "goalPriority": "medium-priority",
        "goalValue": 90,
        "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
        "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      },
    ],
    "caseNum": "",
    "date": 2017-07-13T19:31:00.000Z,
    "end": 2017-08-02T19:31:00.000Z,
    "fiReason": undefined,
    "fiStatus": undefined,
    "identifier": "",
    "interventionType": "IRS",
    "jurisdictions": Array [
      Object {
        "id": "",
        "name": "",
      },
    ],
    "name": "",
    "opensrpEventId": undefined,
    "start": 2017-07-13T19:31:00.000Z,
    "status": "draft",
    "taskGenerationStatus": "False",
    "title": "",
    "version": "1",
  },
  "jurisdictionLabel": "Country",
  "redirectAfterAction": "/intervention/irs/drafts",
}
`;

exports[`containers/pages/NewPlan renders correctly 1`] = `
Object {
  "allFormActivities": Array [
    Object {
      "actionCode": "Case Confirmation",
      "actionDescription": "Confirm the index case",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Case Confirmation",
      "goalDescription": "Confirm the index case",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 1,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "RACD Register Family",
      "actionDescription": "Register all families & family members in all residential structures enumerated (100%) within the operational area",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "Family Registration",
      "condition": Array [
        Object {
          "description": "Structure is residential or type does not exist",
          "expression": "$this.type.where(id='locationType').exists().not() or $this.type.where(id='locationType').text = 'Residential Structure'",
        },
        Object {
          "description": "Family does not exist for structure",
          "expression": "$this.contained.exists().not()",
        },
        Object {
          "description": "Apply to residential structures in Register_Structure questionnaires",
          "expression": "questionnaire = 'Register_Structure' and $this.item.where(linkId='structureType').answer.value ='Residential Structure'",
        },
      ],
      "goalDescription": "Register all families & family members in all residential structures enumerated (100%) within the operational area",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "name": "plan-activation",
        },
        Object {
          "description": "",
          "expression": "questionnaire = 'Register_Structure'",
          "name": "event-submission",
        },
      ],
    },
    Object {
      "actionCode": "RACD Register Family",
      "actionDescription": "Register all families & family members in all residential structures enumerated (100%) within the operational area",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Family Registration",
      "goalDescription": "Register all families & family members in all residential structures enumerated (100%) within the operational area",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "Blood Screening",
      "actionDescription": "Visit all residential structures (100%) within a 1 km radius of a confirmed index case and test each registered person",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Blood Screening",
      "goalDescription": "Visit all residential structures (100%) within a 1 km radius of a confirmed index case and test each registered person",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "Blood Screening",
      "actionDescription": "Visit all residential structures (100%) within a 1 km radius of a confirmed index case and test each registered person",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Blood Screening",
      "condition": Array [
        Object {
          "description": "Person is older than 5 years or person associated with questionnaire response if older than 5 years",
          "expression": "($this.is(FHIR.Patient) and $this.birthDate <= today() - 5 'years') or ($this.contained.where(Patient.birthDate <= today() - 5 'years').exists())",
        },
      ],
      "goalDescription": "Visit all residential structures (100%) within a 1 km radius of a confirmed index case and test each registered person",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "name": "plan-activation",
        },
        Object {
          "description": "",
          "expression": "questionnaire = 'Family Registration' or questionnaire = 'Family Member Registration'",
          "name": "event-submission",
        },
      ],
    },
    Object {
      "actionCode": "Bednet Distribution",
      "actionDescription": "Visit 100% of residential structures in the operational area and provide nets",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Bednet Distribution",
      "goalDescription": "Visit 100% of residential structures in the operational area and provide nets",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "Bednet Distribution",
      "actionDescription": "Visit 100% of residential structures in the operational area and provide nets",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "Bednet Distribution",
      "condition": Array [
        Object {
          "description": "Structure is residential or type does not exist",
          "expression": "$this.type.where(id='locationType').exists().not() or $this.type.where(id='locationType').text = 'Residential Structure'",
        },
        Object {
          "description": "Family exists for structure",
          "expression": "$this.contained.exists()",
        },
        Object {
          "description": "Register structure Event submitted for a residential structure",
          "expression": "questionnaire = 'Register_Structure' and $this.item.where(linkId='structureType').answer.value ='Residential Structure'",
        },
      ],
      "goalDescription": "Visit 100% of residential structures in the operational area and provide nets",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "name": "plan-activation",
        },
        Object {
          "description": "",
          "expression": "questionnaire = 'Family Registration'",
          "name": "event-submission",
        },
      ],
    },
    Object {
      "actionCode": "Larval Dipping",
      "actionDescription": "Perform a minimum of three larval dipping activities in the operational area",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Larval Dipping",
      "condition": Array [
        Object {
          "description": "Structure is a larval breeding site",
          "expression": "$this.type.where(id='locationType').text = 'Larval Breeding Site'",
        },
        Object {
          "description": "Apply to larval breeding sites in Register_Structure questionnaires",
          "expression": "questionnaire = 'Register_Structure' and $this.item.where(linkId='structureType').answer.value ='Larval Breeding Site'",
        },
      ],
      "goalDescription": "Perform a minimum of three larval dipping activities in the operational area",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 3,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "name": "plan-activation",
        },
        Object {
          "description": "",
          "expression": "questionnaire = 'Register_Structure'",
          "name": "event-submission",
        },
      ],
    },
    Object {
      "actionCode": "Larval Dipping",
      "actionDescription": "Perform a minimum of three larval dipping activities in the operational area",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Larval Dipping",
      "goalDescription": "Perform a minimum of three larval dipping activities in the operational area",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 3,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "Mosquito Collection",
      "actionDescription": "Set a minimum of three mosquito collection traps and complete the mosquito collection process",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Mosquito Collection",
      "condition": Array [
        Object {
          "description": "Structure is a mosquito collection point",
          "expression": "$this.type.where(id='locationType').text = 'Mosquito Collection Point'",
        },
        Object {
          "description": "Apply to mosquito collection point in Register_Structure questionnaires",
          "expression": "questionnaire = 'Register_Structure' and $this.item.where(linkId='structureType').answer.value ='Mosquito Collection Point'",
        },
      ],
      "goalDescription": "Set a minimum of three mosquito collection traps and complete the mosquito collection process",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 3,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "name": "plan-activation",
        },
        Object {
          "description": "",
          "expression": "questionnaire = 'Register_Structure'",
          "name": "event-submission",
        },
      ],
    },
    Object {
      "actionCode": "Mosquito Collection",
      "actionDescription": "Set a minimum of three mosquito collection traps and complete the mosquito collection process",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Mosquito Collection",
      "goalDescription": "Set a minimum of three mosquito collection traps and complete the mosquito collection process",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 3,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "IRS",
      "actionDescription": "Visit each structure in the operational area and attempt to spray",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "Spray Structures",
      "goalDescription": "Spray structures in the operational area",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 90,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "IRS",
      "actionDescription": "Visit each structure in the operational area and attempt to spray",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "Spray Structures",
      "condition": Array [
        Object {
          "description": "Structure is residential or type does not exist",
          "expression": "$this.type.where(id='locationType').exists().not() or $this.type.where(id='locationType').text = 'Residential Structure'",
        },
        Object {
          "description": "Apply to residential structures in Register_Structure questionnaires",
          "expression": "questionnaire = 'Register_Structure' and $this.item.where(linkId='structureType').answer.value ='Residential Structure'",
        },
      ],
      "goalDescription": "Spray structures in the operational area",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 90,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "name": "plan-activation",
        },
        Object {
          "description": "",
          "expression": "questionnaire = 'Register_Structure'",
          "name": "event-submission",
        },
      ],
    },
    Object {
      "actionCode": "MDA Dispense",
      "actionDescription": "Dispense medication to each eligible person",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "MDA Dispense",
      "goalDescription": "Dispense medication to each eligible person",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "MDA Adverse Event(s)",
      "actionDescription": "Report any adverse events from medication",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "MDA Adverse Event(s)",
      "goalDescription": "Report any adverse events from medication",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 2,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "MDA Dispense",
      "actionDescription": "Visit all residential structures (100%) and dispense prophylaxis to each registered person",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "MDA Dispense",
      "condition": Array [
        Object {
          "description": "Person is older than 5 years or person associated with questionaire response if older than 5 years",
          "expression": "($this.is(FHIR.Patient) and $this.birthDate <= today() - 5 'years') or ($this.contained.where(Patient.birthDate <= today() - 5 'years').exists())",
        },
      ],
      "goalDescription": "Visit all residential structures (100%) dispense prophylaxis to each registered person",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "name": "plan-activation",
        },
        Object {
          "description": "",
          "expression": "questionnaire = 'Family Registration' or questionnaire = 'Family Member Registration'",
          "name": "event-submission",
        },
      ],
    },
    Object {
      "actionCode": "MDA Adherence",
      "actionDescription": "Visit all residential structures (100%) and confirm adherence of each registered person",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "MDA Adherence",
      "condition": Array [
        Object {
          "description": "The person fully received the dispense activity",
          "expression": "$this.item.where(linkId='business_status').answer.value = 'Fully Received'",
        },
      ],
      "goalDescription": "Visit all residential structures (100%) and confirm adherence of each registered person",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "description": "",
          "expression": "questionnaire = 'mda_dispense'",
          "name": "event-submission",
        },
      ],
    },
    Object {
      "actionCode": "BCC",
      "actionDescription": "Conduct BCC activity",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Behaviour Change Communication",
      "goalDescription": "Complete at least 1 BCC activity for the operational area",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 1,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "BCC",
      "actionDescription": "Conduct BCC activity",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "Behaviour Change Communication",
      "condition": Array [
        Object {
          "description": "Jurisdiction type location",
          "expression": "Location.physicalType.text = 'jdn'",
        },
      ],
      "goalDescription": "Complete at least 1 BCC activity for the operational area",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 1,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "name": "plan-activation",
        },
      ],
    },
  ],
  "allowMoreJurisdictions": true,
  "cascadingSelect": true,
  "disabledActivityFields": Array [],
  "disabledFields": Array [],
  "formHandler": Any<Function>,
  "initialValues": Object {
    "activities": Array [
      Object {
        "actionCode": "Case Confirmation",
        "actionDescription": "Confirm the index case",
        "actionIdentifier": "",
        "actionReason": "Investigation",
        "actionTitle": "Case Confirmation",
        "goalDescription": "Confirm the index case",
        "goalDue": 2017-07-20T19:31:00.000Z,
        "goalPriority": "medium-priority",
        "goalValue": 1,
        "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
        "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      },
      Object {
        "actionCode": "RACD Register Family",
        "actionDescription": "Register all families & family members in all residential structures enumerated (100%) within the operational area",
        "actionIdentifier": "",
        "actionReason": "Investigation",
        "actionTitle": "Family Registration",
        "goalDescription": "Register all families & family members in all residential structures enumerated (100%) within the operational area",
        "goalDue": 2017-07-20T19:31:00.000Z,
        "goalPriority": "medium-priority",
        "goalValue": 100,
        "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
        "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      },
      Object {
        "actionCode": "Blood Screening",
        "actionDescription": "Visit all residential structures (100%) within a 1 km radius of a confirmed index case and test each registered person",
        "actionIdentifier": "",
        "actionReason": "Investigation",
        "actionTitle": "Blood Screening",
        "goalDescription": "Visit all residential structures (100%) within a 1 km radius of a confirmed index case and test each registered person",
        "goalDue": 2017-07-20T19:31:00.000Z,
        "goalPriority": "medium-priority",
        "goalValue": 100,
        "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
        "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      },
      Object {
        "actionCode": "Bednet Distribution",
        "actionDescription": "Visit 100% of residential structures in the operational area and provide nets",
        "actionIdentifier": "",
        "actionReason": "Investigation",
        "actionTitle": "Bednet Distribution",
        "goalDescription": "Visit 100% of residential structures in the operational area and provide nets",
        "goalDue": 2017-07-20T19:31:00.000Z,
        "goalPriority": "medium-priority",
        "goalValue": 100,
        "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
        "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      },
      Object {
        "actionCode": "Larval Dipping",
        "actionDescription": "Perform a minimum of three larval dipping activities in the operational area",
        "actionIdentifier": "",
        "actionReason": "Investigation",
        "actionTitle": "Larval Dipping",
        "goalDescription": "Perform a minimum of three larval dipping activities in the operational area",
        "goalDue": 2017-07-20T19:31:00.000Z,
        "goalPriority": "medium-priority",
        "goalValue": 3,
        "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
        "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      },
      Object {
        "actionCode": "Mosquito Collection",
        "actionDescription": "Set a minimum of three mosquito collection traps and complete the mosquito collection process",
        "actionIdentifier": "",
        "actionReason": "Investigation",
        "actionTitle": "Mosquito Collection",
        "goalDescription": "Set a minimum of three mosquito collection traps and complete the mosquito collection process",
        "goalDue": 2017-07-20T19:31:00.000Z,
        "goalPriority": "medium-priority",
        "goalValue": 3,
        "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
        "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      },
      Object {
        "actionCode": "BCC",
        "actionDescription": "Conduct BCC activity",
        "actionIdentifier": "",
        "actionReason": "Investigation",
        "actionTitle": "Behaviour Change Communication",
        "goalDescription": "Complete at least 1 BCC activity for the operational area",
        "goalDue": 2017-07-20T19:31:00.000Z,
        "goalPriority": "medium-priority",
        "goalValue": 1,
        "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
        "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      },
    ],
    "caseNum": "",
    "date": 2017-07-13T19:31:00.000Z,
    "end": 2017-08-02T19:31:00.000Z,
    "fiReason": undefined,
    "fiStatus": undefined,
    "identifier": "",
    "interventionType": "FI",
    "jurisdictions": Array [
      Object {
        "id": "",
        "name": "",
      },
    ],
    "name": "",
    "opensrpEventId": undefined,
    "start": 2017-07-13T19:31:00.000Z,
    "status": "draft",
    "taskGenerationStatus": "False",
    "title": "",
    "version": "1",
  },
  "jurisdictionLabel": "Focus Area",
  "redirectAfterAction": "/plans/list",
}
`;

exports[`containers/pages/NewPlan renders correctly: page title 1`] = `
<h3
  className="mb-3 page-title"
>
  Create New Plan
</h3>
`;

exports[`containers/pages/NewPlan renders text correctly for New Plan in planning tool  1`] = `
Object {
  "allFormActivities": Array [
    Object {
      "actionCode": "Case Confirmation",
      "actionDescription": "Confirm the index case",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Case Confirmation",
      "goalDescription": "Confirm the index case",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 1,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "RACD Register Family",
      "actionDescription": "Register all families & family members in all residential structures enumerated (100%) within the operational area",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "Family Registration",
      "condition": Array [
        Object {
          "description": "Structure is residential or type does not exist",
          "expression": "$this.type.where(id='locationType').exists().not() or $this.type.where(id='locationType').text = 'Residential Structure'",
        },
        Object {
          "description": "Family does not exist for structure",
          "expression": "$this.contained.exists().not()",
        },
        Object {
          "description": "Apply to residential structures in Register_Structure questionnaires",
          "expression": "questionnaire = 'Register_Structure' and $this.item.where(linkId='structureType').answer.value ='Residential Structure'",
        },
      ],
      "goalDescription": "Register all families & family members in all residential structures enumerated (100%) within the operational area",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "name": "plan-activation",
        },
        Object {
          "description": "",
          "expression": "questionnaire = 'Register_Structure'",
          "name": "event-submission",
        },
      ],
    },
    Object {
      "actionCode": "RACD Register Family",
      "actionDescription": "Register all families & family members in all residential structures enumerated (100%) within the operational area",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Family Registration",
      "goalDescription": "Register all families & family members in all residential structures enumerated (100%) within the operational area",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "Blood Screening",
      "actionDescription": "Visit all residential structures (100%) within a 1 km radius of a confirmed index case and test each registered person",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Blood Screening",
      "goalDescription": "Visit all residential structures (100%) within a 1 km radius of a confirmed index case and test each registered person",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "Blood Screening",
      "actionDescription": "Visit all residential structures (100%) within a 1 km radius of a confirmed index case and test each registered person",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Blood Screening",
      "condition": Array [
        Object {
          "description": "Person is older than 5 years or person associated with questionnaire response if older than 5 years",
          "expression": "($this.is(FHIR.Patient) and $this.birthDate <= today() - 5 'years') or ($this.contained.where(Patient.birthDate <= today() - 5 'years').exists())",
        },
      ],
      "goalDescription": "Visit all residential structures (100%) within a 1 km radius of a confirmed index case and test each registered person",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "name": "plan-activation",
        },
        Object {
          "description": "",
          "expression": "questionnaire = 'Family Registration' or questionnaire = 'Family Member Registration'",
          "name": "event-submission",
        },
      ],
    },
    Object {
      "actionCode": "Bednet Distribution",
      "actionDescription": "Visit 100% of residential structures in the operational area and provide nets",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Bednet Distribution",
      "goalDescription": "Visit 100% of residential structures in the operational area and provide nets",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "Bednet Distribution",
      "actionDescription": "Visit 100% of residential structures in the operational area and provide nets",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "Bednet Distribution",
      "condition": Array [
        Object {
          "description": "Structure is residential or type does not exist",
          "expression": "$this.type.where(id='locationType').exists().not() or $this.type.where(id='locationType').text = 'Residential Structure'",
        },
        Object {
          "description": "Family exists for structure",
          "expression": "$this.contained.exists()",
        },
        Object {
          "description": "Register structure Event submitted for a residential structure",
          "expression": "questionnaire = 'Register_Structure' and $this.item.where(linkId='structureType').answer.value ='Residential Structure'",
        },
      ],
      "goalDescription": "Visit 100% of residential structures in the operational area and provide nets",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "name": "plan-activation",
        },
        Object {
          "description": "",
          "expression": "questionnaire = 'Family Registration'",
          "name": "event-submission",
        },
      ],
    },
    Object {
      "actionCode": "Larval Dipping",
      "actionDescription": "Perform a minimum of three larval dipping activities in the operational area",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Larval Dipping",
      "condition": Array [
        Object {
          "description": "Structure is a larval breeding site",
          "expression": "$this.type.where(id='locationType').text = 'Larval Breeding Site'",
        },
        Object {
          "description": "Apply to larval breeding sites in Register_Structure questionnaires",
          "expression": "questionnaire = 'Register_Structure' and $this.item.where(linkId='structureType').answer.value ='Larval Breeding Site'",
        },
      ],
      "goalDescription": "Perform a minimum of three larval dipping activities in the operational area",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 3,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "name": "plan-activation",
        },
        Object {
          "description": "",
          "expression": "questionnaire = 'Register_Structure'",
          "name": "event-submission",
        },
      ],
    },
    Object {
      "actionCode": "Larval Dipping",
      "actionDescription": "Perform a minimum of three larval dipping activities in the operational area",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Larval Dipping",
      "goalDescription": "Perform a minimum of three larval dipping activities in the operational area",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 3,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "Mosquito Collection",
      "actionDescription": "Set a minimum of three mosquito collection traps and complete the mosquito collection process",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Mosquito Collection",
      "condition": Array [
        Object {
          "description": "Structure is a mosquito collection point",
          "expression": "$this.type.where(id='locationType').text = 'Mosquito Collection Point'",
        },
        Object {
          "description": "Apply to mosquito collection point in Register_Structure questionnaires",
          "expression": "questionnaire = 'Register_Structure' and $this.item.where(linkId='structureType').answer.value ='Mosquito Collection Point'",
        },
      ],
      "goalDescription": "Set a minimum of three mosquito collection traps and complete the mosquito collection process",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 3,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "name": "plan-activation",
        },
        Object {
          "description": "",
          "expression": "questionnaire = 'Register_Structure'",
          "name": "event-submission",
        },
      ],
    },
    Object {
      "actionCode": "Mosquito Collection",
      "actionDescription": "Set a minimum of three mosquito collection traps and complete the mosquito collection process",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Mosquito Collection",
      "goalDescription": "Set a minimum of three mosquito collection traps and complete the mosquito collection process",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 3,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "IRS",
      "actionDescription": "Visit each structure in the operational area and attempt to spray",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "Spray Structures",
      "goalDescription": "Spray structures in the operational area",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 90,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "IRS",
      "actionDescription": "Visit each structure in the operational area and attempt to spray",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "Spray Structures",
      "condition": Array [
        Object {
          "description": "Structure is residential or type does not exist",
          "expression": "$this.type.where(id='locationType').exists().not() or $this.type.where(id='locationType').text = 'Residential Structure'",
        },
        Object {
          "description": "Apply to residential structures in Register_Structure questionnaires",
          "expression": "questionnaire = 'Register_Structure' and $this.item.where(linkId='structureType').answer.value ='Residential Structure'",
        },
      ],
      "goalDescription": "Spray structures in the operational area",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 90,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "name": "plan-activation",
        },
        Object {
          "description": "",
          "expression": "questionnaire = 'Register_Structure'",
          "name": "event-submission",
        },
      ],
    },
    Object {
      "actionCode": "MDA Dispense",
      "actionDescription": "Dispense medication to each eligible person",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "MDA Dispense",
      "goalDescription": "Dispense medication to each eligible person",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "MDA Adverse Event(s)",
      "actionDescription": "Report any adverse events from medication",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "MDA Adverse Event(s)",
      "goalDescription": "Report any adverse events from medication",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 2,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "MDA Dispense",
      "actionDescription": "Visit all residential structures (100%) and dispense prophylaxis to each registered person",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "MDA Dispense",
      "condition": Array [
        Object {
          "description": "Person is older than 5 years or person associated with questionaire response if older than 5 years",
          "expression": "($this.is(FHIR.Patient) and $this.birthDate <= today() - 5 'years') or ($this.contained.where(Patient.birthDate <= today() - 5 'years').exists())",
        },
      ],
      "goalDescription": "Visit all residential structures (100%) dispense prophylaxis to each registered person",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "name": "plan-activation",
        },
        Object {
          "description": "",
          "expression": "questionnaire = 'Family Registration' or questionnaire = 'Family Member Registration'",
          "name": "event-submission",
        },
      ],
    },
    Object {
      "actionCode": "MDA Adherence",
      "actionDescription": "Visit all residential structures (100%) and confirm adherence of each registered person",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "MDA Adherence",
      "condition": Array [
        Object {
          "description": "The person fully received the dispense activity",
          "expression": "$this.item.where(linkId='business_status').answer.value = 'Fully Received'",
        },
      ],
      "goalDescription": "Visit all residential structures (100%) and confirm adherence of each registered person",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 100,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "description": "",
          "expression": "questionnaire = 'mda_dispense'",
          "name": "event-submission",
        },
      ],
    },
    Object {
      "actionCode": "BCC",
      "actionDescription": "Conduct BCC activity",
      "actionIdentifier": "",
      "actionReason": "Investigation",
      "actionTitle": "Behaviour Change Communication",
      "goalDescription": "Complete at least 1 BCC activity for the operational area",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 1,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
    },
    Object {
      "actionCode": "BCC",
      "actionDescription": "Conduct BCC activity",
      "actionIdentifier": "",
      "actionReason": "Routine",
      "actionTitle": "Behaviour Change Communication",
      "condition": Array [
        Object {
          "description": "Jurisdiction type location",
          "expression": "Location.physicalType.text = 'jdn'",
        },
      ],
      "goalDescription": "Complete at least 1 BCC activity for the operational area",
      "goalDue": 2017-07-20T19:31:00.000Z,
      "goalPriority": "medium-priority",
      "goalValue": 1,
      "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
      "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      "trigger": Array [
        Object {
          "name": "plan-activation",
        },
      ],
    },
  ],
  "allowMoreJurisdictions": false,
  "cascadingSelect": false,
  "disabledActivityFields": Array [],
  "disabledFields": Array [],
  "formHandler": Any<Function>,
  "initialValues": Object {
    "activities": Array [
      Object {
        "actionCode": "Case Confirmation",
        "actionDescription": "Confirm the index case",
        "actionIdentifier": "",
        "actionReason": "Investigation",
        "actionTitle": "Case Confirmation",
        "goalDescription": "Confirm the index case",
        "goalDue": 2017-07-20T19:31:00.000Z,
        "goalPriority": "medium-priority",
        "goalValue": 1,
        "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
        "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      },
      Object {
        "actionCode": "RACD Register Family",
        "actionDescription": "Register all families & family members in all residential structures enumerated (100%) within the operational area",
        "actionIdentifier": "",
        "actionReason": "Investigation",
        "actionTitle": "Family Registration",
        "goalDescription": "Register all families & family members in all residential structures enumerated (100%) within the operational area",
        "goalDue": 2017-07-20T19:31:00.000Z,
        "goalPriority": "medium-priority",
        "goalValue": 100,
        "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
        "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      },
      Object {
        "actionCode": "Blood Screening",
        "actionDescription": "Visit all residential structures (100%) within a 1 km radius of a confirmed index case and test each registered person",
        "actionIdentifier": "",
        "actionReason": "Investigation",
        "actionTitle": "Blood Screening",
        "goalDescription": "Visit all residential structures (100%) within a 1 km radius of a confirmed index case and test each registered person",
        "goalDue": 2017-07-20T19:31:00.000Z,
        "goalPriority": "medium-priority",
        "goalValue": 100,
        "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
        "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      },
      Object {
        "actionCode": "Bednet Distribution",
        "actionDescription": "Visit 100% of residential structures in the operational area and provide nets",
        "actionIdentifier": "",
        "actionReason": "Investigation",
        "actionTitle": "Bednet Distribution",
        "goalDescription": "Visit 100% of residential structures in the operational area and provide nets",
        "goalDue": 2017-07-20T19:31:00.000Z,
        "goalPriority": "medium-priority",
        "goalValue": 100,
        "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
        "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      },
      Object {
        "actionCode": "Larval Dipping",
        "actionDescription": "Perform a minimum of three larval dipping activities in the operational area",
        "actionIdentifier": "",
        "actionReason": "Investigation",
        "actionTitle": "Larval Dipping",
        "goalDescription": "Perform a minimum of three larval dipping activities in the operational area",
        "goalDue": 2017-07-20T19:31:00.000Z,
        "goalPriority": "medium-priority",
        "goalValue": 3,
        "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
        "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      },
      Object {
        "actionCode": "Mosquito Collection",
        "actionDescription": "Set a minimum of three mosquito collection traps and complete the mosquito collection process",
        "actionIdentifier": "",
        "actionReason": "Investigation",
        "actionTitle": "Mosquito Collection",
        "goalDescription": "Set a minimum of three mosquito collection traps and complete the mosquito collection process",
        "goalDue": 2017-07-20T19:31:00.000Z,
        "goalPriority": "medium-priority",
        "goalValue": 3,
        "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
        "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      },
      Object {
        "actionCode": "BCC",
        "actionDescription": "Conduct BCC activity",
        "actionIdentifier": "",
        "actionReason": "Investigation",
        "actionTitle": "Behaviour Change Communication",
        "goalDescription": "Complete at least 1 BCC activity for the operational area",
        "goalDue": 2017-07-20T19:31:00.000Z,
        "goalPriority": "medium-priority",
        "goalValue": 1,
        "timingPeriodEnd": 2017-07-20T19:31:00.000Z,
        "timingPeriodStart": 2017-07-13T19:31:00.000Z,
      },
    ],
    "caseNum": "",
    "date": 2017-07-13T19:31:00.000Z,
    "end": 2017-08-02T19:31:00.000Z,
    "fiReason": undefined,
    "fiStatus": undefined,
    "identifier": "",
    "interventionType": "FI",
    "jurisdictions": Array [
      Object {
        "id": "",
        "name": "",
      },
    ],
    "name": "",
    "opensrpEventId": undefined,
    "start": 2017-07-13T19:31:00.000Z,
    "status": "draft",
    "taskGenerationStatus": "False",
    "title": "",
    "version": "1",
  },
  "jurisdictionLabel": "Country",
  "redirectAfterAction": "/plans/planning",
}
`;
